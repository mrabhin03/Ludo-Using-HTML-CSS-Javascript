body,html{
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
}
body{

    background-color: red;
    display: flex;
    align-items: center;
    justify-content: baseline;
    flex-direction: column;
}
body header{
    width: 100%;
    height: 7%;
    background-color: yellow;
    display:  grid;
    place-items: center;
}
body section{
    width: 100%;
    height: 86%;
    background-color: gray;
    display: grid;
    place-items: center;
}
body footer{
    width: 100%;
    height: 7%;
    background-color: yellow;
}
.ludo-board{
    width: 600px;
    height: 600px;
    background-color: rgb(255, 255, 255);
    display: grid;
    grid-template-columns: repeat(15,1fr);
    grid-template-rows: repeat(15,1fr);
}
.ludo-board > div{
    box-shadow: 0 0 0 .4px rgba(0, 0, 0, 0.936);
    transition: background-color .3s ease-in-out;
    /* color: transparent; */
    pointer-events: none;
}

.ludo-board .home-base{
    grid-row: span 6;
    grid-column: span 6;
    display: grid;
    place-items: center;
}
.ludo-board .home-base p{
    font-family: serif;
}
.ludo-board .home-base .base{
    width: 70%;
    height: 70%;
    display: grid;
    background-color: white;
    grid-template-columns: repeat(2,1fr);
    grid-template-rows: repeat(2,1fr);
}
.ludo-board .home-base .base>div{
    transform: scale(.45);
    border-radius: 100%;
    display: grid;
    place-items: center;
}

.ludo-board .home-base.red, .ludo-board .home-base.red .base>div,.red{
    background-color: rgb(207, 0, 0) !important;
}
.ludo-board .home-base.green, .ludo-board .home-base.green .base>div,.green{
    background-color: rgb(0, 207, 38) !important;
}
.ludo-board .home-base.blue, .ludo-board .home-base.blue .base>div,.blue{
    background-color: rgb(0, 114, 207) !important;
}
.ludo-board .home-base.yellow, .ludo-board .home-base.yellow .base>div,.yellow{
    background-color: rgb(230, 242, 0) !important;
}
.ludo-board .home-base.red.Active{
    animation: blink 2s ease-in-out infinite;
    
}
.ludo-board .home-base.green.Active{
    animation: blink 2s ease-in-out infinite;
}
.ludo-board .home-base.blue.Active{
    animation: blink 2s ease-in-out infinite;
}
.ludo-board .home-base.yellow.Active{
    animation: blink 2s ease-in-out infinite;
}
@keyframes blink {
    0%{
        border: 3px solid transparent;
        filter: contrast(100%) brightness(100%);
    }
    50%{
        filter: contrast(90%) brightness(70%);
        border: 3px solid rgb(0, 0, 0);
    }
    100%{
        border: 3px solid transparent;
        filter: contrast(100%) brightness(100%);
    }
}


.winner-base{
    grid-row: span 3;
    grid-column: span 3;
    overflow: hidden;
    border: 1px solid black;
}
.winner-base .win{
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(2,1fr);
    grid-template-rows: repeat(2,1fr);
    transform: rotate(45deg) scale(1.5);
    background-color: black;
}
.winner-base .win div{
    box-shadow: 0px 0px 1px black;
}

.player{
    height: fit-content;
    width: 27px;
    cursor: pointer;
    position: absolute;
    z-index: 30;
    gap: 20px;
}
.player .player_image{
    width: 100%;
    filter: drop-shadow(2px 2px 1px black);
}
.player.jump{
    transform: scale(1.1) !important;
    z-index: 50;
}
.dice-throw{
    background-color: red;
    height: 100px;
    width: 100px;
    position: absolute;
    z-index: 30;
    right: 80px;
    bottom: 80px;
    border-radius: 100%;
    border: 5px solid rgb(255, 255, 255);
    display: grid;
    place-items: center;
}
.dice-throw .the-dice{
    height: 60px;
    width: 60px;
    background-color: white;
    border-radius: 10px;
    display: grid;
    place-items: center;
    cursor: pointer;
}
.dice-throw .the-dice >img{
    width: 90%;
}
.dice-throw >.the-dice.Spin{
    animation: dicespin .01s linear 100;
}
@keyframes dicespin {
    from{
        transform: rotateY(0deg);
    }
    to{
        transform: rotateY(360deg);
    }
    
}
